server.port=8080
server.servlet.context-path=/app

app.size.default = 10
app.page.default = 0
app.kafka.test = true

## Database Properties
spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
spring.datasource.username = postgres
spring.datasource.password = postgres

# pool connection
spring.datasource.max-active=6
spring.datasource.max-idle=4
spring.datasource.min-idle=4
spring.datasource.initial-size=2

## Hibernate Properties
spring.jpa.database = postgresql
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Producer properties
spring.kafka.producer.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.group-id=group_id
topic.name.producer=topico.comando.teste
spring.kafka.producer.type=BATCH
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# Consumer properties
custom.kafka.consumer.bootstrap-servers=127.0.0.1:9092
custom.kafka.consumer.group-id=group_id
custom.kafka.consumer.auto-offset-reset=earliest
custom.kafka.consumer.max-poll-records=5

topic.name.consumer=topico.comando.teste

# Common Kafka Properties
auto.create.topics.enable=true

