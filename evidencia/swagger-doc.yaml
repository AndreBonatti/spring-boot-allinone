swagger: '2.0'
info:
  description: '"Spring Boot REST API for Spring Boot Postgres"'
  version: 0.0.1
  title: Spring Boot Demo
  contact:
    name: Andre Bonatti
    url: https://github.com/andrebonatti
host: localhost:8080
basePath: /app
tags:
  - name: client-controller
    description: Client Controller
paths:
  /v1/clients:
    get:
      tags:
        - client-controller
      summary: findAll
      operationId: findAllUsingGET
      produces:
        - '*/*'
      parameters:
        - name: annotation
          in: query
          required: false
          type: string
          x-example: rua bahia, 762
        - name: birthday
          in: query
          required: false
          type: string
          format: date
          x-example: '2000-01-01'
        - name: name
          in: query
          required: false
          type: string
          x-example: Pedro
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 10
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Client»'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      deprecated: false
    post:
      tags:
        - client-controller
      summary: Create client
      description: This method create a new client
      operationId: createClientUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: createClient
          description: createClient
          required: true
          schema:
            $ref: '#/definitions/ClientRequest'
      responses:
        '201':
          description: Created
          schema:
            type: integer
            format: int64
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      deprecated: false
  /v1/clients/{id}:
    put:
      tags:
        - client-controller
      summary: Update client
      description: This method update a client
      operationId: updateClientUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateClient
          description: updateClient
          required: true
          schema:
            $ref: '#/definitions/ClientRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Client'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ResponseError'
        '404':
          description: Not found
          schema:
            $ref: '#/definitions/ResponseError'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ResponseError'
      deprecated: false
definitions:
  Client:
    type: object
    properties:
      age:
        type: integer
        format: int32
      annotation:
        type: string
      birthday:
        type: string
        format: date
      id:
        type: integer
        format: int64
      name:
        type: string
    title: Client
  ClientRequest:
    type: object
    properties:
      annotation:
        type: string
        example: rua bahia, 762
      birthday:
        type: string
        format: date
        example: '2000-01-01'
      name:
        type: string
        example: Pedro
    title: ClientRequest
  Pageable:
    type: object
    properties:
      offset:
        type: integer
        format: int64
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      paged:
        type: boolean
      sort:
        $ref: '#/definitions/Sort'
      unpaged:
        type: boolean
    title: Pageable
  Page«Client»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Client'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      numberOfElements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      totalElements:
        type: integer
        format: int64
      totalPages:
        type: integer
        format: int32
    title: Page«Client»
  ResponseError:
    type: object
    properties:
      detail:
        type: string
      message:
        type: string
      status:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 425 TOO_EARLY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
    title: ResponseError
  Sort:
    type: object
    properties:
      empty:
        type: boolean
      sorted:
        type: boolean
      unsorted:
        type: boolean
    title: Sort